[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "bianca-ai"
version = "1.0.0"
authors = [
    {name = "BIANCA Team", email = "bianca@example.com"},
]
description = "Biblioteca de Inteligência Artificial para Novos Componentes e Aplicações"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
]
keywords = [
    "ai",
    "artificial-intelligence",
    "openai",
    "gpt",
    "tokens",
    "cost-calculation",
    "machine-learning",
    "nlp",
    "natural-language-processing",
]
dependencies = [
    "tiktoken>=0.11.0",
    "python-dotenv>=1.0.0",
    "openai>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
]
audio = [
    "speechrecognition>=3.10.0",
    "pyaudio>=0.2.11",
]
all = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "speechrecognition>=3.10.0",
    "pyaudio>=0.2.11",
]

[project.urls]
Homepage = "https://github.com/your-username/bianca-ai"
Repository = "https://github.com/your-username/bianca-ai.git"
Issues = "https://github.com/your-username/bianca-ai/issues"
Documentation = "https://github.com/your-username/bianca-ai/wiki"

[project.scripts]
bianca-info = "bianca:main"

[tool.setuptools]
packages = ["bianca"]
include-package-data = true

[tool.setuptools.package-data]
bianca = ["README.txt", "*.md"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=bianca",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "tiktoken.*",
    "openai.*",
    "dotenv.*",
]
ignore_missing_imports = true

